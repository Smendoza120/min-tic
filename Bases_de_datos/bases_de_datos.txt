//Bases de datos en MySQL
/*
    -Conceptos de bases de datos
    -Descargar e instalar MySQL
    -Creacion de una base de datos
    -Conceptos de relaciones entre tablas
    -Relacion de uno a uno
    -Relacion de uno a muchos
    -Relacion de muchos a muchos
    -Insertar registros en las tablas
    -Modificar registros de una tabla
    -Eliminar registros de una tabla
    -Consultas en una tabla
    -Consultas más avanzadas con operadores
    -Consultas en varias tablas
    -Vistas
    -Procedimientos almacenados
    -Triggers
*/

//Bases de datos
/*
    Es un almacen que nos permite guardar grandes cantidad de informacion de forma organizada, para luego la podamos 
    encontrarlos y utilizar facilmente, funciona como un repositorio.

    Modelos de bases de datos:

    -Bases de datos Jerárquicas
    -Bases de datos de red
    -Bases de datos transaccionales
    -Bases de datos relacionales (Modelo que veremos)
    -Bases de datos multidimensionales
    -Bases de datos orientadas a objetos
    -Bases de datos documentales
    -Bases de datos deductivas

    Gestores de bases de datos:

    -MySQL (Gestor a utilizar)
    -Microsoft SQL Server
    -Oracle
    -Microsoft Access
    -PostgreSQL
    -DB2
*/

//Creacion y eliminacion de una base de datos
/*
    Para la creacion de una base de datos tenemos que hacer lo siguiente: 

        -Escribimos el siguiente comando (create database), se le agrega el nombre deseado.
        -Para decirle al programa que usaremos la base de datos creada usamos el comando (use) y se le agrega el nombre 
        de nuestra base de datos.
        -Para eliminar una base de datos, lo hacemos con el siguiente codigo (drop) le agregamos el tipo de dato que 
        eliminaremos y le agregamos el nombre.  
*/

//Creacion de tablas
/*
    Para crear una tabla tenemos 2 formas de hacerlo, las cuales son las siguientes: 

    Primera forma: 
        -Agregamos el comando (create table) le agregamos el nombre y abrimos parentesis y finalizamos con punto y coma
        -Para agregar datos, lo haremos dentro de los parentesis, similar a como llenamos un objeto, con la diferencia 
        que tiene otra sintaxis, primero va el nombre, luego el tipo de dato, si sera una casilla de obligacion para 
        llenar o no, un dato extra que se refiere a un ejemplo de como se deberia llenar ese campo, y un extra que es
        lo que hara ese comando, si quiere sumar automaticamente o restar.

            create table producto(
                idProducto int auto_increment primary key,
                nombre varchar(50) not null,
                precio decimal(10,2) not null,
                fecha_venta date default '0000-00-00'
            );

        -Cuando agregamos un dato de tipo cadena, agregamos (varchar) y agregamos unos parentesis, donde indicaremos el 
        numero de caracteres que tendra.
        -Si tenemos un dato que no es entero agregamos la palabra (decimal) y en los parentesis podemos agregar 2 datos, 
        los cuales son el numero de datos que tendremos como enteros y con una coma le damos la cantidad de decimales que 
        tendra dicha casilla.
        -Para una fecha usamos la palabra (date) y como default agregamos una visual para llenar este campo.


        -Si vamos a mostrar la tabla usamos el comando (show talbes) y nos mostrara las tablas que hemos creado.
        -Para mostrar el contenido de la tabla usamos el comando (show columns from) y agregamos el nombre de nuestra tabla.
        -Para eliminarla usamos el mismo comando visto el cual es (drop table) y agregamos el nombre de la tabla.

            show tables;  Mostrar tabla.
            
            show columns from producto; Mostrar las columnas de la tabla.

            drop table producto;  Eliminar tabla.

    Segunda forma:
        -Nos dirigimos al arbol donde tenemos los datos, dentro de nuestra base de datos, nos dirigimos a la seccion tabla.
        -Le damos click derecho y crear tabla, nos desplegara otro menu, donde llenaremos todos los datos que ya vimos.
        -Para mostrar la tabla haremos lo mismo que vimos hace un momento.

    Para mostrar los datos de una tabla agregamos la palabra (select) luego un asterisco y agregamos la palabra (from) y agregamos 
    el nombre de nuestra tabla, si nos aparece un error, agregamos una ruta relativa:

        select * from tienda.producto;
*/

//Relaciones entre tablas
/*
    Si queremos que los datos de nuestras tablas se puedan seleccionar, encontrar y procesar de una manera rapida, es 
    necesario que las tablas no se encuentren aisladas unas de otras.

    Para relacionar las tablas usaremos las columnas pueden tener un nombre diferente pero para que haya una relacion tienen
    que ser del mismo tipo de datos.

    Hay 3 tipos de relaciones:
        -Relacion de uno a uno
        -Relacion de uno a muchos
        -Relacion de muchos a muchos

    Relacion de uno a uno:
        Estas se dan cuando un registro esta relacionado con otro y con ese solamente y a su vez este segundo tambien estara
        relacionado solamente con el primero.

                                        Relacion uno a uno
                                Galletas                Codigo barras
                            idProducto                  Codigo_Barras
                            nombre VARCHAR(50)          idCodigo INT
                            precio DECIMAL(10,2)        serial VARCHAR (30)
                            fecha_venta DATE            idProducto INT
    
        En este ejemplo podemos ver como tenemos una relacion de uno a uno, lo que los une es el (idProducto)

    Relacion uno a muchos:
        Este estara relacionado solo con otro, pero este segundo podria estar relacionado con mas de uno.

                                        Relacion uno a muchos
                                Galletas                   Categoria   
                            idProducto                  idCategoria INT
                            nombre VARCHAR(50)          nombre VARCHAR (30)
                            precio DECIMAL(10,2)        
                            fecha_venta DATE 
                            idCategoria INT      

        Lo que refleja este ejemplo es que solo tenemos una categoria y esta categoria podria ir a muchos mas productos.  

    Relacion de muchos a muchos:
        En las relaciones muchos a muchos a cada registro de la tabla A, se le pueden asociar varios registros de la tabla B,
        y cada registro de la tabla B pueden estar relacionado con mas de un registro de la tabla A.   

                                        Relacion muchos a muchos
                            Producto                  Union                 Proveedor
                        idProducto                 idUnion INT             idProveedor
                        nombre VARCHAR(50)         idProducto INT          nombre VARCHAR(30)
                        precio DECIMAL(10,2)       idProveedor INT     
                        fecha_venta DATE  

        Para tener una relacion de muchos a muchos, lo hacemos con un intermediario, donde se uniran varias tablas, el ejemplo
        se lee de la siguiente manera, 1 producto lo pueden traer muchos proveedores, y un proveedor puede tener muchos 
        productos y la tabla union, hace como un puentre entre una tabla y otra.                          
*/

//Insertar registros en las tablas
/*
    Para poder ingresar registros en las tablas se puede hacer de 3 maneras: 

        Primera manera:
        -usamos la palabra (insert) luego (into) ingresamos el nombre de la tabla que queremos modificar, le agregamos la 
        palabra (values) y como parametros le agregamos los datos, el primero se agrega como nulo ya que tiene un contador
        este se lo agregamos cuando creamos la tabla.

            insert into categoria values (null, 'Bebidas');

        Segunda manera:
        -Usamos la palabra (insert) y (into) luego el nombre de la tabla seguido de ello agregamos un parentesis con el nombre  
        de la columna que queremos insertar, agregamos la palabra (values) y le pasamos los datos que queremos agregar.

            insert into categoria (nombre) values ('Aceites');

        Tercera manera:
        -Seguimos usando las 2 palabras (insert y into) seguido de ello agregamos el nombre de la tabla, dentro de un parentessis
        agregamos los datos que queremos modificar y si son varios los separamos con una coma, luego agregamos un patentesis y 
        agregamos los datos, si queremos agregar mas de una fila, lo que hacemos es separar los parentesis con un coma.

            insert into codigobarras (serial, idProducto) values
            ("1231546532", 1), ("4545676", 2), ("4564786", 3), ("455467", 4);
*/

//Modificar registros de una tabla
/*
    Para modificar una fina de nuestra base de datos, lo que tenemos que hacer es agregar el nombre (update) y llamamos a la 
    tabla que queremos modificar luego agregamos la palabra (set) y le damos el nombre de la columna que queremos modificar
    la igualamos y agregamos el resultado que queremos agregar, pero tiene que ser del mismo tipo de dato por ultimo agregamos  
    la palabra (where) y le damos el id de la fila que esta mos modificando.

            update tienda.categoria set nombre = "Bebidas con gas" where idCategoria = 1;

    si queremos hacer mas de un cambio lo que hacemos es separalos por una coma, de esta manera: 

            update tienda.producto set nombre = "Gaseosa Pepsi", precio = 5.20 where idProducto = 2; 
*/

//Eliminar registros de una tabla
/*
    Para eliminar un producto necesitamos hacer el siguiente codigo: 

        delete from producto where idProducto = 14;

        -agregamos la palabra (delete) despues (from) seleccionamos la tabla, agregamos la palabra (where) y agregamos la 
        columna que queremos eliminar;

    Recuerda que si eliminas una fila de la tabla y esta tenia alguna relacion, esta eliminacion afectara a cada tabla, por lo que tendrias todo actualizado de una excelente manera.
*/

//Consultas dentro de las tablas
/*
    Hay varias maneras de hacer consultas dentro de las tablas, por lo que aqui veremos algunas:

        Busqueda global
            select * from producto;
        
            Esta busqueda ya la vimos, esta es una busqueda global, lo que quiere decir que nos mostrara todos los datos de 
            nuestra tabla.

        Alias temporal
            select nombre as 'nombre del producto', precio, cantidad from producto;

            Con este tipo de busquedas, le podemos agregar un nombre temporal a nuestra consulta.

        Busqueda exacta
            select nombre, precio from producto;

            Esta busqueda es para buscar una fila en concreto. 

        Consultas filtradas
            select nombre, precio, cantidad from producto where cantidad = 100;

            Con estas consultas buscamos filtrar los datos de mayor interes en ese momento.
        
        Busqueda de la menor y mayor cantidad
            select min(cantidad) as 'cantidad minima', max(cantidad)as 'cantidad maxima' from producto;

            Si queremos saber el mayor o menor dato de una tabla esta es la manera correcta de hacerlo.

        Busaqueda ordenada ascendente
            select nombre, precio from producto order by nombre asc;

            Si queremos hacer una busqueda y que esta este organizada de manera ascendente, lo haremos con este codigo.

        Busqueda ordenada decendente
            select nombre, precio from producto order by nombre desc;

            tambien podemos hacer consultas de manera decendente y se logran con este codigo.
*/

//Consultas mas avanzadas con operaciones
/*
    Este tipo de consultas tienen operadores logicos.

        Operador and (&&)
            select * from producto where idCategoria = 1 and cantidad >= 150;
            
            Esta busqueda hace una busqueda mas exacta de 2 o mas filas.
            
        Operador or (||)    
            select * from producto where idCategoria = 1 or cantidad > 100; 

            Esta busqueda hace una busqueda de cualquier opcion que sea verdadera.

        Diferente de
            select * from producto where idCategoria != 1;

            Esta busquda se encarga de buscar una fila diferente a la seleccionada, se puede hacer de 2 maneras con (!=) o (<>).

        Operador mayor, menor, mayor igual o menor igual
            select * from producto where idCategoria > 100;

            Esta busqueda funciona para hacer busquedas entre rangos.

        Busquedas vacias
            select * from producto where precio is null;

            Con esta busqueda podemos mirar los campos vacios, tenemos que agregar la palabra (is null).

        Busquedas diferentes a vacias
            select * from producto where precio is not null;

            Con esta busqueda obtenemos los datos que sean diferentes de vacio, para este agregamos las palabras (is not null)

        Busquedas entre rangos    
            select * from producto where precio between 2 and 5;

            En esta busqueda seleccionamos 2 rangos y nos dara los datos que se encuentren dentro de ellos, usamos la palabra (between).

        Busqueda fuera de 2 rangos
            select * from producto where precio not between 2 and 5;

            Esta busqueda pone 2 rangos y excluye los datos que se encuentran dentro de ese rango y nos muestra los demas
            para este usamos la palabra (not between).

        Busqueda con operadores logicos
            select * from producto where cantidad = 50 + 50 + 50;

            Podemos hacer busquedas con sumas, restas, ETC, solo hacemos una suma. 

        Busqueda con filtros de palabras
            select * from producto where nombre like 'Gaseosa%';

            Para hacer un filtro, agregamos la palabra (like) y dentro de una cadena de caracteres agregamos la palabra que 
            queremos buscar y la finalizamos con un (%).

        Busqueda con la letra final de una palabra
            select * from producto where nombre like '%o';

            Esta busqueda es similar a la pasada, agregamos la palabra (like) y dentro de comillas agregamos un porcentaje
            y agregamos la letra deseada.

        Busqueda con letras en medio
            select * from producto where nombre like '%osa%'

            En esta busqueda tambien haremos uso del (like) y los porcentajes, entonces agregamos la palabra y dentro de las 
            comillas agregamos un porcentaje, las letras que queremos buscar y finalizamos con un porcentaje.
*/
